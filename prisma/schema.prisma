// schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Portfolio {
  id          String        @id @default(cuid())
  title       String
  description String
  user        User?         @relation(fields: [userId], references: [id])
  userId      String?
  transactions Transaction[]
}
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}
model User {
  id         String      @id @default(cuid())
  name       String?
  email      String?     @unique
  password  String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  createdAt  DateTime    @default(now()) @map(name: "created_at")
  updatedAt  DateTime    @updatedAt @map(name: "updated_at")
  portfolios Portfolio[]

  @@map(name: "users")
}

model Coin {
  id          String        @id @default(cuid())
  slug        String
  name        String
  transactions Transaction[]
}

model TransactionTypes {
  id          String        @id @default(cuid())
  name        String
  transactions Transaction[]
}

model Currencies {
  id          String        @id @default(cuid())
  name        String
  transactions Transaction[]
}

model Transaction {
  id             String            @id @default(cuid())
  portfolio      Portfolio?        @relation(fields: [idPortfolio], references: [id])
  idPortfolio    String?
  type           TransactionTypes? @relation(fields: [idType], references: [id])
  idType         String?
  coin           Coin?             @relation(fields: [idCoin], references: [id])
  idCoin         String
  currency       Currencies?       @relation(fields: [idCurrency], references: [id])
  idCurrency     String?
  quantity       Float
  date           DateTime
  fees           Float
  pricePerCoin  Float
  note           String
  createdAt      DateTime          @default(now()) @map(name: "created_at")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}